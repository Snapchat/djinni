name: Build and Test

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache bazel build results
        uses: actions/cache@v2
        env:
          cache-name: bazel-cache
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-master

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Set the version
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
        run: sed "s/\[DJINNI\-VERSION\]/$SOURCE_TAG/gi" src/source/Main.scala > src/source/Main.scala.tmp && mv src/source/Main.scala.tmp src/source/Main.scala

      - name: Build
        run: bazel build //src:djinni

      - name: Generate examples / check clean output
        run: ./ci/generate.sh

      - name: Test
        run: bazel test //test-suite:djinni-java-tests  //test-suite:djinni-objc-tests

      - name: External Test
        working-directory: external-test
        run: |
          bazel run @djinni//src:djinni -- --help
          bazel run @djinni//src:djinni -- --version
