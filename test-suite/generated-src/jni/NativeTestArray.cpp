// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from array.djinni

#include "NativeTestArray.hpp"  // my header
#include "Marshal.hpp"
#include "NativeVec2.hpp"

namespace djinni_generated {

NativeTestArray::NativeTestArray() : ::djinni::JniInterface<::testsuite::TestArray, NativeTestArray>("com/dropbox/djinni/test/TestArray$CppProxy") {}

NativeTestArray::~NativeTestArray() = default;


CJNIEXPORT void JNICALL Java_com_dropbox_djinni_test_TestArray_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        delete reinterpret_cast<::djinni::CppProxyHandle<::testsuite::TestArray>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_dropbox_djinni_test_TestArray_testStringArray(JNIEnv* jniEnv, jobject /*this*/, jobject j_a)
{
    try {
        auto r = ::testsuite::TestArray::testStringArray(::djinni::Array<::djinni::String, ::djinni::JavaClassName<'j','a','v','a','/','l','a','n','g','/','S','t','r','i','n','g'>>::toCpp(jniEnv, j_a));
        return ::djinni::release(::djinni::Array<::djinni::String, ::djinni::JavaClassName<'j','a','v','a','/','l','a','n','g','/','S','t','r','i','n','g'>>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_dropbox_djinni_test_TestArray_testIntArray(JNIEnv* jniEnv, jobject /*this*/, jobject j_a)
{
    try {
        auto r = ::testsuite::TestArray::testIntArray(::djinni::Array<::djinni::I32, ::djinni::JavaClassName<'I'>>::toCpp(jniEnv, j_a));
        return ::djinni::release(::djinni::Array<::djinni::I32, ::djinni::JavaClassName<'I'>>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_dropbox_djinni_test_TestArray_testRecordArray(JNIEnv* jniEnv, jobject /*this*/, jobject j_a)
{
    try {
        auto r = ::testsuite::TestArray::testRecordArray(::djinni::Array<::djinni_generated::NativeVec2, ::djinni::JavaClassName<'c','o','m','/','d','r','o','p','b','o','x','/','d','j','i','n','n','i','/','t','e','s','t','/','V','e','c','2'>>::toCpp(jniEnv, j_a));
        return ::djinni::release(::djinni::Array<::djinni_generated::NativeVec2, ::djinni::JavaClassName<'c','o','m','/','d','r','o','p','b','o','x','/','d','j','i','n','n','i','/','t','e','s','t','/','V','e','c','2'>>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_dropbox_djinni_test_TestArray_testArrayOfArray(JNIEnv* jniEnv, jobject /*this*/, jobject j_a)
{
    try {
        auto r = ::testsuite::TestArray::testArrayOfArray(::djinni::Array<::djinni::Array<::djinni::I32, ::djinni::JavaClassName<'I'>>, ::djinni::JavaClassName<'[','I'>>::toCpp(jniEnv, j_a));
        return ::djinni::release(::djinni::Array<::djinni::Array<::djinni::I32, ::djinni::JavaClassName<'I'>>, ::djinni::JavaClassName<'[','I'>>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
