// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from outcome.djinni

#include "NativeTestOutcome.hpp"  // my header
#include "NativeNestedOutcome.hpp"
#include "Outcome_swift.hpp"

namespace djinni_generated {

djinni::swift::AnyValue TestOutcome_getSuccessOutcome(const djinni::swift::ParameterList* params) try {
    auto ret = ::testsuite::TestOutcome::getSuccessOutcome();
    return ::djinni::swift::OutcomeAdaptor<::djinni::swift::String, ::djinni::swift::I32>::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_getErrorOutcome(const djinni::swift::ParameterList* params) try {
    auto ret = ::testsuite::TestOutcome::getErrorOutcome();
    return ::djinni::swift::OutcomeAdaptor<::djinni::swift::String, ::djinni::swift::I32>::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_putSuccessOutcome(const djinni::swift::ParameterList* params) try {
    auto _x = ::djinni::swift::OutcomeAdaptor<::djinni::swift::String, ::djinni::swift::I32>::toCpp(params->getValue(0));
    auto ret = ::testsuite::TestOutcome::putSuccessOutcome(std::move(_x));
    return ::djinni::swift::String::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_putErrorOutcome(const djinni::swift::ParameterList* params) try {
    auto _x = ::djinni::swift::OutcomeAdaptor<::djinni::swift::String, ::djinni::swift::I32>::toCpp(params->getValue(0));
    auto ret = ::testsuite::TestOutcome::putErrorOutcome(std::move(_x));
    return ::djinni::swift::I32::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_getNestedSuccessOutcome(const djinni::swift::ParameterList* params) try {
    auto ret = ::testsuite::TestOutcome::getNestedSuccessOutcome();
    return ::djinni_generated::NativeNestedOutcome::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_getNestedErrorOutcome(const djinni::swift::ParameterList* params) try {
    auto ret = ::testsuite::TestOutcome::getNestedErrorOutcome();
    return ::djinni_generated::NativeNestedOutcome::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_putNestedSuccessOutcome(const djinni::swift::ParameterList* params) try {
    auto _x = ::djinni_generated::NativeNestedOutcome::toCpp(params->getValue(0));
    auto ret = ::testsuite::TestOutcome::putNestedSuccessOutcome(std::move(_x));
    return ::djinni::swift::I32::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue TestOutcome_putNestedErrorOutcome(const djinni::swift::ParameterList* params) try {
    auto _x = ::djinni_generated::NativeNestedOutcome::toCpp(params->getValue(0));
    auto ret = ::testsuite::TestOutcome::putNestedErrorOutcome(std::move(_x));
    return ::djinni::swift::String::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}

} // namespace djinni_generated
