// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from single_language_interfaces.djinni

#include "NativeUsesSingleLanguageListeners.hpp"  // my header
#include "NativeJavaOnlyListener.hpp"
#include "NativeObjcOnlyListener.hpp"

namespace djinni_generated {

djinni::swift::AnyValue UsesSingleLanguageListeners_callForObjC(const djinni::swift::ParameterList* params) try {
    auto inst = NativeUsesSingleLanguageListeners::toCpp(params->getValue(0));
    auto _l = ::djinni_generated::NativeObjcOnlyListener::toCpp(params->getValue(1));
    inst->callForObjC(std::move(_l));
    return djinni::swift::makeVoidValue();
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue UsesSingleLanguageListeners_returnForObjC(const djinni::swift::ParameterList* params) try {
    auto inst = NativeUsesSingleLanguageListeners::toCpp(params->getValue(0));
    auto ret = inst->returnForObjC();
    return ::djinni_generated::NativeObjcOnlyListener::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue UsesSingleLanguageListeners_callForJava(const djinni::swift::ParameterList* params) try {
    auto inst = NativeUsesSingleLanguageListeners::toCpp(params->getValue(0));
    auto _l = ::djinni_generated::NativeJavaOnlyListener::toCpp(params->getValue(1));
    inst->callForJava(std::move(_l));
    return djinni::swift::makeVoidValue();
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue UsesSingleLanguageListeners_returnForJava(const djinni::swift::ParameterList* params) try {
    auto inst = NativeUsesSingleLanguageListeners::toCpp(params->getValue(0));
    auto ret = inst->returnForJava();
    return ::djinni_generated::NativeJavaOnlyListener::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}

} // namespace djinni_generated
