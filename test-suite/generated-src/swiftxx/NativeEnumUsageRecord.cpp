// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from enum.djinni

#include "NativeEnumUsageRecord.hpp"  // my header
#include "NativeColor.hpp"

namespace djinni_generated {

djinni::swift::AnyValue NativeEnumUsageRecord::fromCpp(const ::testsuite::EnumUsageRecord& c) {
    auto ret = std::make_shared<djinni::swift::CompositeValue>();
    ret->addValue(::djinni_generated::NativeColor::fromCpp(c.e));
    ret->addValue(::djinni::swift::Optional<std::experimental::optional, ::djinni_generated::NativeColor>::fromCpp(c.o));
    ret->addValue(::djinni::swift::List<::djinni_generated::NativeColor>::fromCpp(c.l));
    ret->addValue(::djinni::swift::Set<::djinni_generated::NativeColor>::fromCpp(c.s));
    ret->addValue(::djinni::swift::Map<::djinni_generated::NativeColor, ::djinni_generated::NativeColor>::fromCpp(c.m));
    return {ret};
}
::testsuite::EnumUsageRecord NativeEnumUsageRecord::toCpp(const djinni::swift::AnyValue& s) {
    auto p = std::get<djinni::swift::CompositeValuePtr>(s);
    return ::testsuite::EnumUsageRecord(::djinni_generated::NativeColor::toCpp(p->getValue(0)), ::djinni::swift::Optional<std::experimental::optional, ::djinni_generated::NativeColor>::toCpp(p->getValue(1)), ::djinni::swift::List<::djinni_generated::NativeColor>::toCpp(p->getValue(2)), ::djinni::swift::Set<::djinni_generated::NativeColor>::toCpp(p->getValue(3)), ::djinni::swift::Map<::djinni_generated::NativeColor, ::djinni_generated::NativeColor>::toCpp(p->getValue(4)));
}

} // namespace djinni_generated
