// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from multiple_inheritance.djinni

#include "NativeListenerCaller.hpp"  // my header
#include "NativeFirstListener.hpp"
#include "NativeSecondListener.hpp"

namespace djinni_generated {

djinni::swift::AnyValue ListenerCaller_init(const djinni::swift::ParameterList* params) try {
    auto _first_l = ::djinni_generated::NativeFirstListener::toCpp(params->getValue(0));
    auto _second_l = ::djinni_generated::NativeSecondListener::toCpp(params->getValue(1));
    auto ret = ::testsuite::ListenerCaller::init(std::move(_first_l), std::move(_second_l));
    return ::djinni_generated::NativeListenerCaller::fromCpp(ret);
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue ListenerCaller_callFirst(const djinni::swift::ParameterList* params) try {
    auto inst = NativeListenerCaller::toCpp(params->getValue(0));
    inst->callFirst();
    return djinni::swift::makeVoidValue();
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}
djinni::swift::AnyValue ListenerCaller_callSecond(const djinni::swift::ParameterList* params) try {
    auto inst = NativeListenerCaller::toCpp(params->getValue(0));
    inst->callSecond();
    return djinni::swift::makeVoidValue();
}
catch (const std::exception& e) {
    return {djinni::swift::ErrorValue{ e.what(), std::current_exception()}};
}

} // namespace djinni_generated
