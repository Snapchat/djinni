// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from client_interface.djinni

import DjinniSupport
import DjinniSupportCxx
import Foundation
import TestSuite
import TestSuiteCxx

final class ReverseClientInterfaceCppProxy: DjinniSupport.CppProxy, TestSuite.ReverseClientInterface {
    init(_ inst: djinni.swift.AnyValue) { super.init(inst:inst) } 
    func returnStr() throws -> String {
        var _params = djinni.swift.ParameterList()
        _params.addValue(inst)
        var ret = djinni_generated.ReverseClientInterface_returnStr(&_params)
        try handleCppErrors(&ret)
        return StringMarshaller.fromCpp(ret)
    }
    func methTakingInterface(_ i: TestSuite.ReverseClientInterface) throws -> String {
        var _params = djinni.swift.ParameterList()
        _params.addValue(inst)
        _params.addValue(ReverseClientInterfaceMarshaller.toCpp(i))
        var ret = djinni_generated.ReverseClientInterface_methTakingInterface(&_params)
        try handleCppErrors(&ret)
        return StringMarshaller.fromCpp(ret)
    }
    func methTakingOptionalInterface(_ i: Optional<TestSuite.ReverseClientInterface>) throws -> String {
        var _params = djinni.swift.ParameterList()
        _params.addValue(inst)
        _params.addValue(OptionalMarshaller<ReverseClientInterfaceMarshaller>.toCpp(i))
        var ret = djinni_generated.ReverseClientInterface_methTakingOptionalInterface(&_params)
        try handleCppErrors(&ret)
        return StringMarshaller.fromCpp(ret)
    }
}
public enum ReverseClientInterfaceMarshaller: DjinniSupport.Marshaller {
    public typealias SwiftType = TestSuite.ReverseClientInterface
    public static func fromCpp(_ c: djinni.swift.AnyValue) -> SwiftType {
        return cppInterfaceToSwift(c, { ReverseClientInterfaceCppProxy(c) as SwiftType })
    }
    public static func toCpp(_ s: SwiftType) -> djinni.swift.AnyValue {
        return swiftInterfaceToCpp(s, { fatalError("n/a") })
    }
}
public class ReverseClientInterface_statics {
    public static func create() throws -> TestSuite.ReverseClientInterface {
        var _params = djinni.swift.ParameterList()
        var ret = djinni_generated.ReverseClientInterface_create(&_params)
        try handleCppErrors(&ret)
        return ReverseClientInterfaceMarshaller.fromCpp(ret)
    }
}
