// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from enum.djinni

import DjinniSupport
import DjinniSupportCxx
import Foundation
import TestSuite
import TestSuiteCxx

public enum EnumUsageRecordMarshaller: DjinniSupport.Marshaller {
    public typealias SwiftType = TestSuite.EnumUsageRecord
    public static func fromCpp(_ c: djinni.swift.AnyValue) -> SwiftType {
        return withUnsafePointer(to: c) { p in
            let e = ColorMarshaller.fromCpp(djinni.swift.getMember(p, 0))
            let o = OptionalMarshaller<ColorMarshaller>.fromCpp(djinni.swift.getMember(p, 1))
            let l = ListMarshaller<ColorMarshaller>.fromCpp(djinni.swift.getMember(p, 2))
            let s = SetMarshaller<ColorMarshaller>.fromCpp(djinni.swift.getMember(p, 3))
            let m = MapMarshaller<ColorMarshaller, ColorMarshaller>.fromCpp(djinni.swift.getMember(p, 4))
            return SwiftType(e: e, o: o, l: l, s: s, m: m)
        }
    }
    public static func toCpp(_ s: SwiftType) -> djinni.swift.AnyValue {
        var ret = djinni.swift.makeCompositeValue()
        djinni.swift.addMember(&ret, ColorMarshaller.toCpp(s.e))
        djinni.swift.addMember(&ret, OptionalMarshaller<ColorMarshaller>.toCpp(s.o))
        djinni.swift.addMember(&ret, ListMarshaller<ColorMarshaller>.toCpp(s.l))
        djinni.swift.addMember(&ret, SetMarshaller<ColorMarshaller>.toCpp(s.s))
        djinni.swift.addMember(&ret, MapMarshaller<ColorMarshaller, ColorMarshaller>.toCpp(s.m))
        return ret
    }
}
