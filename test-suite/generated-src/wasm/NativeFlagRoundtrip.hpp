// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from enum_flags.djinni

#pragma once

#include "djinni_wasm.hpp"
#include "flag_roundtrip.hpp"

namespace djinni_generated {

struct NativeFlagRoundtrip : ::djinni::JsInterface<::testsuite::FlagRoundtrip, NativeFlagRoundtrip> {
    using CppType = std::shared_ptr<::testsuite::FlagRoundtrip>;
    using CppOptType = std::shared_ptr<::testsuite::FlagRoundtrip>;
    using JsType = em::val;
    using Boxed = NativeFlagRoundtrip;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) { return fromCppOpt(c); }

    static em::val cppProxyMethods();

    static int32_t roundtrip_access(int32_t w_flag);
    static int32_t roundtrip_empty(int32_t w_flag);
    static em::val roundtrip_access_boxed(const em::val& w_flag);
    static em::val roundtrip_empty_boxed(const em::val& w_flag);

};

}  // namespace djinni_generated
