// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from outcome.djinni

#pragma once

#include "djinni_wasm.hpp"
#include "test_outcome.hpp"

namespace djinni_generated {

struct NativeTestOutcome : ::djinni::JsInterface<::testsuite::TestOutcome, NativeTestOutcome> {
    using CppType = std::shared_ptr<::testsuite::TestOutcome>;
    using CppOptType = std::shared_ptr<::testsuite::TestOutcome>;
    using JsType = em::val;
    using Boxed = NativeTestOutcome;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) {
        djinni::checkForNull(c.get(), "NativeTestOutcome::fromCpp");
        return fromCppOpt(c);
    }

    static em::val cppProxyMethods();

    static em::val getSuccessOutcome();
    static em::val getErrorOutcome();
    static std::string putSuccessOutcome(const em::val& w_x);
    static int32_t putErrorOutcome(const em::val& w_x);
    static em::val getNestedSuccessOutcome();
    static em::val getNestedErrorOutcome();
    static int32_t putNestedSuccessOutcome(const em::val& w_x);
    static std::string putNestedErrorOutcome(const em::val& w_x);

};

}  // namespace djinni_generated
