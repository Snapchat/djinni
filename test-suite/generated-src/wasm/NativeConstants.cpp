// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from constants.djinni

#include "NativeConstants.hpp"  // my header
#include "NativeConstantRecord.hpp"

namespace djinni_generated {

auto NativeConstants::toCpp(const JsType& j) -> CppType {
    return {};
}
auto NativeConstants::fromCpp(const CppType& c) -> JsType {
    em::val js = em::val::object();
    return js;
}

namespace {
    EM_JS(void, djinni_init_testsuite_constants_consts, (), {
        if (!('testsuite_Constants' in Module)) {
            Module.testsuite_Constants = {};
        }
        Module.testsuite_Constants.BOOL_CONSTANT = true;
        Module.testsuite_Constants.I8_CONSTANT = 1;
        Module.testsuite_Constants.I16_CONSTANT = 2;
        Module.testsuite_Constants.I32_CONSTANT = 3;
        Module.testsuite_Constants.I64_CONSTANT = BigInt("4");
        Module.testsuite_Constants.F32_CONSTANT = 5.0;
        Module.testsuite_Constants.F64_CONSTANT = 5.0;
        Module.testsuite_Constants.OPT_BOOL_CONSTANT = true;
        Module.testsuite_Constants.OPT_I8_CONSTANT = 1;
        Module.testsuite_Constants.OPT_I16_CONSTANT = 2;
        Module.testsuite_Constants.OPT_I32_CONSTANT = 3;
        Module.testsuite_Constants.OPT_I64_CONSTANT = 4;
        Module.testsuite_Constants.OPT_F32_CONSTANT = 5.0;
        Module.testsuite_Constants.OPT_F64_CONSTANT = 5.0;
        Module.testsuite_Constants.STRING_CONSTANT = "string-constant";
        Module.testsuite_Constants.OPT_STRING_CONSTANT = "string-constant";
        Module.testsuite_Constants.OBJECT_CONSTANT =  {
            someInteger: Module.testsuite_Constants.I32_CONSTANT,
            someString: Module.testsuite_Constants.STRING_CONSTANT
        }
        ;
        Module.testsuite_Constants.DUMMY = false;
        'testsuite'.split('.').reduce(function(path, part) {
            if (!(part in path)) { path[part] = {}}; 
            return path[part]}, Module);
        Module.testsuite.Constants = Module.testsuite_Constants
    })
}
void NativeConstants::staticInitializeConstants() {
    static std::once_flag initOnce;
    std::call_once(initOnce, djinni_init_testsuite_constants_consts);
}

EMSCRIPTEN_BINDINGS(testsuite_constants_consts) {
    NativeConstants::staticInitializeConstants();
}

}  // namespace djinni_generated
