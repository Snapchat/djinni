// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from extended_record.djinni

#include "NativeRecordUsingExtendedRecord.hpp"  // my header
#include "NativeExtendedRecord.hpp"

namespace djinni_generated {

auto NativeRecordUsingExtendedRecord::toCpp(const JsType& j) -> CppType {
    return {::djinni_generated::NativeExtendedRecord::Boxed::toCpp(j["er"])};
}
auto NativeRecordUsingExtendedRecord::fromCpp(const CppType& c) -> JsType {
    em::val js = em::val::object();
    js.set("er", ::djinni_generated::NativeExtendedRecord::Boxed::fromCpp(c.er));
    return js;
}

namespace {
    EM_JS(void, djinni_init_testsuite_record_using_extended_record_consts, (), {
        if (!('testsuite_RecordUsingExtendedRecord' in Module)) {
            Module.testsuite_RecordUsingExtendedRecord = {};
        }
        Module.testsuite_RecordUsingExtendedRecord.CR =  {
            er:  {
                foo: false
            }

        }
        ;
        'testsuite'.split('.').reduce(function(path, part) {
            if (!(part in path)) { path[part] = {}}; 
            return path[part]}, Module);
        Module.testsuite.RecordUsingExtendedRecord = Module.testsuite_RecordUsingExtendedRecord
    })
}
void NativeRecordUsingExtendedRecord::staticInitializeConstants() {
    static std::once_flag initOnce;
    std::call_once(initOnce, djinni_init_testsuite_record_using_extended_record_consts);
}

EMSCRIPTEN_BINDINGS(testsuite_record_using_extended_record_consts) {
    NativeRecordUsingExtendedRecord::staticInitializeConstants();
}

}  // namespace djinni_generated
