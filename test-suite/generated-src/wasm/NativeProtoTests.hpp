// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proto.djinni

#pragma once

#include "djinni_wasm.hpp"
#include "proto_tests.hpp"

namespace djinni_generated {

struct NativeProtoTests : ::djinni::JsInterface<::testsuite::ProtoTests, NativeProtoTests> {
    using CppType = std::shared_ptr<::testsuite::ProtoTests>;
    using CppOptType = std::shared_ptr<::testsuite::ProtoTests>;
    using JsType = em::val;
    using Boxed = NativeProtoTests;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) { return fromCppOpt(c); }

    static em::val cppProxyMethods();

    static em::val protoToStrings(const em::val& w_x);
    static em::val stringsToProto(const em::val& w_x);
    static std::string embeddedProtoToString(const em::val& w_x);
    static em::val stringToEmbeddedProto(const std::string& w_x);
    static std::string cppProtoToString(const em::val& w_x);
    static em::val stringToCppProto(const std::string& w_x);
    static std::string embeddedCppProtoToString(const em::val& w_x);
    static em::val stringToEmbeddedCppProto(const std::string& w_x);
    static em::val protoListToStrings(const em::val& w_x);
    static em::val stringsToProtoList(const em::val& w_x);
    static std::string optionalProtoToString(const em::val& w_x);
    static em::val stringToOptionalProto(const std::string& w_x);
    static em::val stringToProtoOutcome(const std::string& w_x);

};

}  // namespace djinni_generated
