// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from derivings.djinni

package com.dropbox.djinni.test;

data class RecordWithNestedDerivings(
    val mKey: Int,
    val mRec: RecordWithDerivings,
) : Comparable<RecordWithNestedDerivings> {

    override fun equals(other: Any?): Boolean  {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as RecordWithNestedDerivings

        if (mKey != other.mKey) return false
        if (mRec != other.mRec) return false

        return true
    }

    override fun hashCode(): Int  {
        // Pick an arbitrary non-zero starting value
        var hashCode = 17;
        hashCode = hashCode * 31 + mKey
        hashCode = hashCode * 31 + mRec.hashCode()
        return hashCode
    }

    override fun toString(): String  {
        return "RecordWithNestedDerivings {" +
                "mKey=" + mKey +
                "," + "mRec=" + mRec +
        "}"
    }


    override fun compareTo(other: RecordWithNestedDerivings): Int  {
        var tempResult: Int
        if (this.mKey < other.mKey) {
            tempResult = -1;
        } else if (this.mKey > other.mKey) {
            tempResult = 1;
        } else {
            tempResult = 0;
        }
        if (tempResult != 0) {
            return tempResult
        }
        tempResult = this.mRec.compareTo(other.mRec);
        if (tempResult != 0) {
            return tempResult
        }
        return 0
    }
}
