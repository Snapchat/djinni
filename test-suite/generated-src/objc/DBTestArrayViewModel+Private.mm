// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from array.djinni

#import "DBTestArrayViewModel+Private.h"
#import "DBTestArrayViewModel.h"
#import "DBVec2ViewModel+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface DBTestArrayViewModel ()

- (id)initWithCpp:(const std::shared_ptr<::testsuite::TestArray>&)cppRef;

@end

@implementation DBTestArrayViewModel {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::testsuite::TestArray>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::testsuite::TestArray>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nonnull NSArray<NSString *> *)testStringArray:(nonnull NSArray<NSString *> *)a {
    try {
        auto objcpp_result_ = ::testsuite::TestArray::testStringArray(::djinni::Array<::djinni::String>::toCpp(a));
        return ::djinni::Array<::djinni::String>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<NSNumber *> *)testIntArray:(nonnull NSArray<NSNumber *> *)a {
    try {
        auto objcpp_result_ = ::testsuite::TestArray::testIntArray(::djinni::Array<::djinni::I32>::toCpp(a));
        return ::djinni::Array<::djinni::I32>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<DBVec2ViewModel *> *)testRecordArray:(nonnull NSArray<DBVec2ViewModel *> *)a {
    try {
        auto objcpp_result_ = ::testsuite::TestArray::testRecordArray(::djinni::Array<::djinni_generated::Vec2>::toCpp(a));
        return ::djinni::Array<::djinni_generated::Vec2>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<NSArray<NSNumber *> *> *)testArrayOfArray:(nonnull NSArray<NSArray<NSNumber *> *> *)a {
    try {
        auto objcpp_result_ = ::testsuite::TestArray::testArrayOfArray(::djinni::Array<::djinni::Array<::djinni::I32>>::toCpp(a));
        return ::djinni::Array<::djinni::Array<::djinni::I32>>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto TestArray::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto TestArray::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<DBTestArrayViewModel>(cpp);
}

} // namespace djinni_generated

@end
