// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from proto.djinni

#import "DBProtoTests+Private.h"
#import "DBProtoTests.h"
#import "DBRecordWithEmbeddedCppProto+Private.h"
#import "DBRecordWithEmbeddedProto+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "Outcome_objc.hpp"
#import "proto/objc/test.pbobjc.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface DBProtoTests ()

- (id)initWithCpp:(const std::shared_ptr<::testsuite::ProtoTests>&)cppRef;

@end

@implementation DBProtoTests {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::testsuite::ProtoTests>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::testsuite::ProtoTests>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nonnull NSArray<NSString *> *)protoToStrings:(nonnull DJTestAddressBook *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::protoToStrings(::djinni::Protobuf<::djinni::test::AddressBook, DJTestAddressBook>::toCpp(x));
        return ::djinni::List<::djinni::String>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull DJTestAddressBook *)stringsToProto:(nonnull NSArray<NSString *> *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringsToProto(::djinni::List<::djinni::String>::toCpp(x));
        return ::djinni::Protobuf<::djinni::test::AddressBook, DJTestAddressBook>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSString *)embeddedProtoToString:(nonnull DBRecordWithEmbeddedProto *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::embeddedProtoToString(::djinni_generated::RecordWithEmbeddedProto::toCpp(x));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull DBRecordWithEmbeddedProto *)stringToEmbeddedProto:(nonnull NSString *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringToEmbeddedProto(::djinni::String::toCpp(x));
        return ::djinni_generated::RecordWithEmbeddedProto::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSString *)cppProtoToString:(const djinni::test2::PersistingState & )x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::cppProtoToString(::djinni::ProtobufPassthrough<::djinni::test2::PersistingState>::toCpp(x));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (djinni::test2::PersistingState)stringToCppProto:(nonnull NSString *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringToCppProto(::djinni::String::toCpp(x));
        return ::djinni::ProtobufPassthrough<::djinni::test2::PersistingState>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSString *)embeddedCppProtoToString:(nonnull DBRecordWithEmbeddedCppProto *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::embeddedCppProtoToString(::djinni_generated::RecordWithEmbeddedCppProto::toCpp(x));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull DBRecordWithEmbeddedCppProto *)stringToEmbeddedCppProto:(nonnull NSString *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringToEmbeddedCppProto(::djinni::String::toCpp(x));
        return ::djinni_generated::RecordWithEmbeddedCppProto::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<NSString *> *)protoListToStrings:(nonnull NSArray<DJTestPerson *> *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::protoListToStrings(::djinni::List<::djinni::Protobuf<::djinni::test::Person, DJTestPerson>>::toCpp(x));
        return ::djinni::List<::djinni::String>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSArray<DJTestPerson *> *)stringsToProtoList:(nonnull NSArray<NSString *> *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringsToProtoList(::djinni::List<::djinni::String>::toCpp(x));
        return ::djinni::List<::djinni::Protobuf<::djinni::test::Person, DJTestPerson>>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull NSString *)optionalProtoToString:(nullable DJTestPerson *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::optionalProtoToString(::djinni::Optional<std::experimental::optional, ::djinni::Protobuf<::djinni::test::Person, DJTestPerson>>::toCpp(x));
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable DJTestPerson *)stringToOptionalProto:(nonnull NSString *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringToOptionalProto(::djinni::String::toCpp(x));
        return ::djinni::Optional<std::experimental::optional, ::djinni::Protobuf<::djinni::test::Person, DJTestPerson>>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nonnull DJOutcome<DJTestPerson *, NSNumber *> *)stringToProtoOutcome:(nonnull NSString *)x {
    try {
        auto objcpp_result_ = ::testsuite::ProtoTests::stringToProtoOutcome(::djinni::String::toCpp(x));
        return ::djinni::Outcome<::djinni::Protobuf<::djinni::test::Person, DJTestPerson>, ::djinni::I32>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto ProtoTests::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto ProtoTests::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<DBProtoTests>(cpp);
}

}  // namespace djinni_generated

@end
