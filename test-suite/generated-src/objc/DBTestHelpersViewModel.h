// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from test.djinni

#import "DBAssortedPrimitivesViewModel.h"
#import "DBColorViewModel.h"
#import "DBMapListRecordViewModel.h"
#import "DBNestedCollectionViewModel.h"
#import "DBPrimitiveListViewModel.h"
#import "DBSetRecordViewModel.h"
#import "DJFuture.h"
#import <Foundation/Foundation.h>
@protocol DBAsyncInterfaceViewModel;
@protocol DBClientInterfaceViewModel;
@protocol DBUserTokenViewModel;


/**
 * Helper methods used by various different tests.
 * (Second line of multi-line documentation.
 *   Indented third line of multi-line documentation.)
 */
@interface DBTestHelpersViewModel : NSObject

/** Method with documentation */
+ (nonnull DBSetRecordViewModel *)getSetRecord;

/**
 * Method with long documentation
 * (Second line of multi-line documentation.
 *   Indented third line of multi-line documentation.)
 */
+ (BOOL)checkSetRecord:(nonnull DBSetRecordViewModel *)rec;

+ (nonnull DBPrimitiveListViewModel *)getPrimitiveList;

+ (BOOL)checkPrimitiveList:(nonnull DBPrimitiveListViewModel *)pl;

+ (nonnull DBNestedCollectionViewModel *)getNestedCollection;

+ (BOOL)checkNestedCollection:(nonnull DBNestedCollectionViewModel *)nc;

+ (nonnull NSDictionary<NSString *, NSNumber *> *)getMap;

+ (BOOL)checkMap:(nonnull NSDictionary<NSString *, NSNumber *> *)m;

+ (nonnull NSDictionary<NSString *, NSNumber *> *)getEmptyMap;

+ (BOOL)checkEmptyMap:(nonnull NSDictionary<NSString *, NSNumber *> *)m;

+ (nonnull DBMapListRecordViewModel *)getMapListRecord;

+ (BOOL)checkMapListRecord:(nonnull DBMapListRecordViewModel *)m;

+ (void)checkClientInterfaceAscii:(nullable id<DBClientInterfaceViewModel>)i;

+ (void)checkClientInterfaceNonascii:(nullable id<DBClientInterfaceViewModel>)i;

+ (void)checkClientInterfaceArgs:(nullable id<DBClientInterfaceViewModel>)i;

+ (void)checkEnumMap:(nonnull NSDictionary<NSNumber *, NSString *> *)m;

+ (void)checkEnum:(DBColorViewModel)c;

+ (nullable id<DBUserTokenViewModel>)tokenId:(nullable id<DBUserTokenViewModel>)t;

+ (nullable id<DBUserTokenViewModel>)createCppToken;

+ (void)checkCppToken:(nullable id<DBUserTokenViewModel>)t;

+ (int64_t)cppTokenId:(nullable id<DBUserTokenViewModel>)t;

+ (void)checkTokenType:(nullable id<DBUserTokenViewModel>)t
                  type:(nonnull NSString *)type;

+ (nullable NSNumber *)returnNone;

/** Ensures that we generate integer translation code */
+ (nonnull DBAssortedPrimitivesViewModel *)assortedPrimitivesId:(nonnull DBAssortedPrimitivesViewModel *)i;

+ (nonnull NSData *)idBinary:(nonnull NSData *)b;

+ (nonnull DJFuture<NSNumber *> *)getAsyncResult;

+ (nonnull DJFuture<NSString *> *)futureRoundtrip:(nonnull DJFuture<NSNumber *> *)f;

+ (nonnull DJFuture<NSNumber *> *)asyncEarlyThrow;

+ (nonnull DJFuture<NSNull *> *)voidAsyncMethod:(nonnull DJFuture<NSNull *> *)f;

/**
 * If the input is empty, returns back an empty future.
 * If the input is non-empty, returns back the value plus one.
 */
+ (nonnull DJFuture<NSNumber *> *)addOneIfPresent:(nonnull DJFuture<NSNumber *> *)f;

+ (nonnull DJFuture<NSString *> *)checkAsyncInterface:(nullable id<DBAsyncInterfaceViewModel>)i;

+ (nonnull DJFuture<NSString *> *)checkAsyncComposition:(nullable id<DBAsyncInterfaceViewModel>)i;

+ (nonnull NSArray<NSString *> *)getOptionalList;

+ (BOOL)checkOptionalList:(nonnull NSArray<NSString *> *)ol;

+ (nonnull NSSet<NSString *> *)getOptionalSet;

+ (BOOL)checkOptionalSet:(nonnull NSSet<NSString *> *)os;

+ (nonnull NSDictionary<NSString *, NSString *> *)getOptionalMap;

+ (BOOL)checkOptionalMap:(nonnull NSDictionary<NSString *, NSString *> *)om;

@end
