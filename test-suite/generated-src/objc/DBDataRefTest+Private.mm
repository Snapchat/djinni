// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from data_ref_view.djinni

#import "DBDataRefTest+Private.h"
#import "DBDataRefTest.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "DataRef_objc.hpp"
#import "DataView_objc.hpp"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface DBDataRefTest ()

- (id)initWithCpp:(const std::shared_ptr<::testsuite::DataRefTest>&)cppRef;

@end

@implementation DBDataRefTest {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::testsuite::DataRefTest>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::testsuite::DataRefTest>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)sendData:(nonnull NSData *)data {
    try {
        _cppRefHandle.get()->sendData(::djinni::NativeDataRef::toCpp(data));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)retriveAsBin {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->retriveAsBin();
        return ::djinni::Binary::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)sendMutableData:(nonnull NSData *)data {
    try {
        _cppRefHandle.get()->sendMutableData(::djinni::NativeDataRef::toCpp(data));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)generateData {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->generateData();
        return ::djinni::NativeDataRef::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)dataFromVec {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->dataFromVec();
        return ::djinni::NativeDataRef::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)dataFromStr {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->dataFromStr();
        return ::djinni::NativeDataRef::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)sendDataView:(nonnull NSData *)data {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->sendDataView(::djinni::NativeDataView::toCpp(data));
        return ::djinni::Binary::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSData *)recvDataView {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->recvDataView();
        return ::djinni::NativeDataView::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable DBDataRefTest *)create {
    try {
        auto objcpp_result_ = ::testsuite::DataRefTest::create();
        return ::djinni_generated::DataRefTest::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto DataRefTest::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto DataRefTest::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<DBDataRefTest>(cpp);
}

}  // namespace djinni_generated

@end
